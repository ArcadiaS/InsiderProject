import{a as H,d as U,r as j,b as w,c as q,o as z,e as _,f as x,g as a,w as t,h as c,i as D,u as r,F as W,j as A,k as S,t as v,l as F,E as G,m as O,n as I,p as X,q as J,s as K,v as Q,x as Y,y as Z,z as $,A as ee,B as ae}from"./app.12c74f4f.js";const le="http://localhost:8890/api",p=H.create({baseURL:le,timeout:2e4});p.interceptors.request.use(l=>(l.headers["X-Requested-With"]="XMLHttpRequest",l),l=>Promise.reject(l));p.interceptors.response.use(l=>{const{data:e,status:i}=l;return i===void 0?Promise.reject(new Error("")):e},l=>{const{data:e,status:i}=l.response;switch(i){default:return l?Promise.reject(l):e}});const f={get:(l,e)=>p.get(l,{params:e}),post:(l,e,i)=>p.post(l,e,i),put:(l,e)=>p.put(l,e),delete:(l,e)=>p.delete(l,{params:e}),head:(l,e)=>p.head(l,{params:e}),options:(l,e)=>p.options(l,{params:e}),patch:(l,e)=>p.patch(l,e)},te=U("MainStore",()=>{const l=j({league_id:null,season_id:null,week_number:null}),e=w([]),i=w([]),h=w([]),b=w([]),E=w([]),P=w([]);async function k(){console.log("test2"),await f.get("/leagues",l).then(n=>{console.log(n),e.value=n,l.league_id=n[0].id,l.week_number=n[0].current_week,h.value=n[0].competition_weeks,n[0].competition_weeks&&(b.value=n[0].competition_weeks.find(u=>u.week_number==l.week_number)),E.value=n[0].teams,V()}).catch(()=>{console.log("error")})}async function V(){await f.get("/seasons",l).then(n=>{console.log(n),i.value=n,l.season_id=n.reverse()[0].id,g()}).catch(()=>{console.log("error")})}async function g(){await f.get("/standings",l).then(n=>{P.value=n}).catch(()=>{console.log("error")})}async function m(){await f.post("/prepare-league-schedule",l).then(n=>{g()}).catch(()=>{console.log("error")})}async function N(n){h.value.find(u=>u.week_number==n)&&(b.value=h.value.find(u=>u.week_number==n))}async function y(){await f.post("/play-all-weeks",l).then(n=>{k()}).catch(()=>{console.log("error")})}async function C(){await f.post("/play-week-by-week",l).then(n=>{k()}).catch(()=>{console.log("error")})}async function s(){await f.post("/reset-all-data",l).then(n=>{k()}).catch(()=>{console.log("error")})}return{filters:l,leagues:e,seasons:i,standings:P,competition_weeks:h,current_week:b,teams:E,getData:k,getSeasons:V,prepareSchedule:m,weekMatches:N,playAllWeeks:y,playNextWeek:C,resetAllData:s}}),ne={class:"card-header"},oe=D("span",null,"League Name",-1),se={class:"text-md font-medium"},re={class:"card-header"},ue=q({__name:"Home",setup(l){const e=te(),i=()=>{e.playAllWeeks()},h=()=>{e.playNextWeek()},b=()=>{e.resetAllData()},E=g=>{console.log("selected league",g),e.filters.league_id=g,e.getSeasons()},P=()=>{e.weekMatches(e.current_week.week_number-1)},k=()=>{e.weekMatches(e.current_week.week_number+1)},V=()=>{e.prepareSchedule()};return z(()=>{e.getData([])}),(g,m)=>{const N=G,y=ae,C=O,s=I,n=X,u=J,d=K,R=Q,T=Y,M=Z,B=$,L=ee;return _(),x("div",null,[a(L,{style:{"text-align":"center"}},{default:t(()=>[a(N,null,{default:t(()=>[c("Header")]),_:1}),a(B,null,{default:t(()=>[a(M,{class:"box-card"},{header:t(()=>[D("div",ne,[oe,a(u,null,{default:t(()=>[a(s,{span:4},{default:t(()=>[a(C,{modelValue:r(e).filters.league_id,"onUpdate:modelValue":m[0]||(m[0]=o=>r(e).filters.league_id=o),class:"m-2",placeholder:"Select",size:"large",onChange:E},{default:t(()=>[(_(!0),x(W,null,A(r(e).leagues,o=>(_(),S(y,{key:o.id,label:o.name,value:o.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),a(s,{span:4},{default:t(()=>[a(C,{modelValue:r(e).filters.season_id,"onUpdate:modelValue":m[1]||(m[1]=o=>r(e).filters.season_id=o),class:"m-2",placeholder:"Select",size:"large"},{default:t(()=>[(_(!0),x(W,null,A(r(e).seasons,o=>(_(),S(y,{key:o.id,label:o.name,value:o.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),a(s,{span:4},{default:t(()=>[a(C,{modelValue:r(e).filters.week_number,"onUpdate:modelValue":m[2]||(m[2]=o=>r(e).filters.week_number=o),class:"m-2",placeholder:"Select",size:"large"},{default:t(()=>[(_(!0),x(W,null,A(r(e).competition_weeks,o=>(_(),S(y,{key:o.id,label:o.week_number,value:o.week_number},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),a(s,{span:4},{default:t(()=>[a(n,{class:"button",onClick:V,type:"info"},{default:t(()=>[c("Prepare Schedule")]),_:1})]),_:1})]),_:1})])]),default:t(()=>[a(u,null,{default:t(()=>[a(s,{span:18},{default:t(()=>[r(e).standings?(_(),S(R,{key:0,data:r(e).standings,stripe:"",style:{width:"100%"},"highlight-current-row":""},{default:t(()=>[a(d,{type:"index",width:"40"}),a(d,{prop:"team.name",label:"Team Name",width:"180"}),a(d,{prop:"played",label:"Played"}),a(d,{prop:"won",label:"Won"}),a(d,{prop:"drawn",label:"Drawn"}),a(d,{prop:"lost",label:"Lost"}),a(d,{prop:"goals_for",label:"GF"}),a(d,{prop:"goals_against",label:"GA"}),a(d,{prop:"goal_difference",label:"GD"}),a(d,{prop:"points",label:"Points"}),a(d,{label:"Champ. Chance"},{default:t(o=>[D("span",se,"%"+v(o.row.championship_chance),1)]),_:1})]),_:1},8,["data"])):F("",!0)]),_:1}),a(s,{span:6},{default:t(()=>[a(M,{class:"box-card"},{header:t(()=>[D("div",re,[a(u,null,{default:t(()=>[a(s,{span:3},{default:t(()=>[a(n,{onClick:P},{default:t(()=>[c("Prev")]),_:1})]),_:1}),a(s,{span:15},{default:t(()=>[c("Week "+v(r(e).current_week.week_number),1)]),_:1}),a(s,{span:3},{default:t(()=>[a(n,{onClick:k},{default:t(()=>[c("Next")]),_:1})]),_:1})]),_:1})])]),default:t(()=>[(_(!0),x(W,null,A(r(e).current_week.competitions,o=>(_(),S(u,null,{default:t(()=>[a(s,{span:8},{default:t(()=>[c(v(o.home_team.name),1)]),_:2},1024),a(s,{span:2},{default:t(()=>[c(v(o.home_team_goals),1)]),_:2},1024),a(s,{span:2},{default:t(()=>[c(v(o.away_team_goals),1)]),_:2},1024),a(s,{span:8},{default:t(()=>[c(v(o.away_team.name),1)]),_:2},1024)]),_:2},1024))),256)),a(T),a(u,null,{default:t(()=>[a(s,{span:8,onClick:i,type:"primary"},{default:t(()=>[c("Play All Weeks")]),_:1}),a(s,{span:8,onClick:h,type:"primary"},{default:t(()=>[c("Play Next Week")]),_:1}),a(s,{span:8,onClick:b,type:"danger"},{default:t(()=>[c("Reset Data")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})])}}});export{ue as default};
